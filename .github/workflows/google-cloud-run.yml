name: Test and Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Create .env.test file
        run: |
          echo "DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" > .env.test
          echo "GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }}" >> .env.test
          echo "GOOGLE_APPLICATION_CREDENTIALS=credentials.json" >> .env.test

      - name: Install dependencies
        run: go mod download

      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Make test script executable
        run: chmod +x run-test-migrations.sh

      - name: Setup test database
        run: ./run-test-migrations.sh

      - name: Run tests
        run: go test ./... -v

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/*_test.go
            **/testdata
          retention-days: 7

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}

    steps:
    - uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth configure-docker

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy orbat \
          --source . \
          --region europe-central2 \
          --timeout 300 \
          --set-env-vars DATABASE_URL="${{ secrets.DATABASE_URL }}",GCS_BUCKET_NAME="${{ secrets.GCS_BUCKET_NAME }}" \
          --project ${{ secrets.GCP_PROJECT_ID }}
        gcloud run services add-iam-policy-binding orbat \
          --region=europe-central2 \
          --member=allUsers \
          --role=roles/run.invoker